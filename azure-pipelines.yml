trigger:
  branches:
    include:
      - master

pr:
  branches:
    exclude:
      - '*'

variables:
- group: Code_Signing_Certificate_2023_2026

stages:
- stage: BuildAndPublish
  condition: succeeded()
  jobs:
  - job: BuildAndSign
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      buildConfiguration: 'Release'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        versionSpec: '5.x'

    - checkout: self
      persistCredentials: true

    - task: GitVersion@5
      inputs:
        runtime: 'core'
        versionSpec: '5.x'
      name: gitVersion

    - task: DownloadSecureFile@1
      name: cert
      inputs:
        secureFile: 'code-signing-certificate-2023-2026.pfx'

    - script: dotnet restore
      displayName: 'Restore Dependencies'

    - script: >
        dotnet build ./src/Infragistics.QueryBuilder.Executor.csproj
        --configuration $(buildConfiguration)
        --no-restore
        -p:SignAssembly=true
        -p:AssemblyOriginatorKeyFile=$(Agent.TempDirectory)/$(cert.secureFilePath)
        -p:PrivateKeyPassword=$(SigningCertificatePassword)
      displayName: 'Build and Sign Assemblies'

    - script: >
        dotnet pack ./src/Infragistics.QueryBuilder.Executor.csproj
        --configuration $(buildConfiguration)
        --no-build
        -p:SignAssembly=true
        -p:AssemblyOriginatorKeyFile=$(Agent.TempDirectory)/$(cert.secureFilePath)
        -p:PrivateKeyPassword=$(SigningCertificatePassword)
        -p:PackageVersion=$(GitVersion.NuGetVersionV2)
        -o $(Build.ArtifactStagingDirectory)/nuget
      displayName: 'Pack NuGet Package'

    # - task: NuGetCommand@2
    #   inputs:
    #     command: 'push'
    #     packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/*.nupkg'
    #     nuGetFeedType: 'external'
    #     publishFeedCredentials: 'NuGet.org API Key'
    #   displayName: 'Publish to NuGet.org'
